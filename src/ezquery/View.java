/* 
 * The MIT License
 *
 * Copyright 2015 Andrew Gjerness.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package ezquery;

//import statements
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import javax.swing.JOptionPane;

/**
 * EZQuery GUI view class
 *
 * @author Andrew Gjerness
 */
public class View extends javax.swing.JFrame {

    //fields
    private String user = "";
    private String pass = "";
    private String url = "";
    private String sql = "";
    private Utilities util;
    private String connection = "";
    private String[] header;
    private String[][] table_data;

    /**
     * Constructor for View Class
     */
    public View() {
        initComponents();
        util = new Utilities();
    }//constructor

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        view_table = new javax.swing.JTable();
        urlText = new javax.swing.JTextField();
        userText = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        sql_text = new javax.swing.JTextArea();
        connect = new javax.swing.JButton();
        disconnect = new javax.swing.JButton();
        url_label = new javax.swing.JLabel();
        user_label = new javax.swing.JLabel();
        pw_label = new javax.swing.JLabel();
        sql_label = new javax.swing.JLabel();
        results_label = new javax.swing.JLabel();
        passText = new javax.swing.JPasswordField();
        sql_button = new javax.swing.JButton();
        connStatusLabel = new javax.swing.JLabel();
        connStatusText = new javax.swing.JLabel();
        results_text = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        about = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EZQuery - Version 1.0");
        setResizable(false);

        view_table.setModel(new javax.swing.table.DefaultTableModel(table_data,header));
        jScrollPane1.setViewportView(view_table);

        sql_text.setColumns(20);
        sql_text.setRows(5);
        jScrollPane5.setViewportView(sql_text);

        connect.setText("Connect");
        connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectActionPerformed(evt);
            }
        });

        disconnect.setText("Disconnect");
        disconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectActionPerformed(evt);
            }
        });

        url_label.setText("URL");

        user_label.setText("Username");

        pw_label.setText("Password");

        sql_label.setText("SQL Statements");

        results_label.setText("Results");

        sql_button.setText("Execute SQL");
        sql_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sql_buttonActionPerformed(evt);
            }
        });

        connStatusLabel.setText("Connection Status:");

        connStatusText.setText("Disconnected from database");

        results_text.setText(" ");

        about.setText("About");
        about.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutMouseClicked(evt);
            }
        });
        jMenuBar1.add(about);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(results_text, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sql_button))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(results_label)
                        .addComponent(sql_label)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(connStatusLabel)
                                .addGap(5, 5, 5)
                                .addComponent(connStatusText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(urlText, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(url_label))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(user_label)
                                    .addComponent(userText, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(passText, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(connect)
                                        .addGap(18, 18, 18)
                                        .addComponent(disconnect))
                                    .addComponent(pw_label))))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(url_label)
                    .addComponent(user_label)
                    .addComponent(pw_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(urlText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connect)
                    .addComponent(disconnect)
                    .addComponent(passText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connStatusLabel)
                    .addComponent(connStatusText))
                .addGap(29, 29, 29)
                .addComponent(sql_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sql_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(results_text)
                        .addGap(18, 18, 18)))
                .addComponent(results_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Action Listener for about button
     *
     * @param evt
     */
    private void aboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutMouseClicked

        JOptionPane.showMessageDialog(null, "Created by Andrew Gjerness\n" + '\u00A9' + " 2015", "About EZQuery", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_aboutMouseClicked

    /**
     * Action listener for connect button
     *
     * @param evt
     */
    private void connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectActionPerformed
        url = urlText.getText();
        user = userText.getText();
        char[] passArray = passText.getPassword();

        for (int i = 0; i < passArray.length; i++) {
            pass += passArray[i];
        }//for
        Arrays.fill(passArray, '0'); //reset pass char array to all 0s
        connection = util.openDB(url, user, pass);
        connStatusText.setText(connection);

    }//GEN-LAST:event_connectActionPerformed

    /**
     * Disconnect button action listener
     *
     * @param evt
     */
    private void disconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconnectActionPerformed
        connection = util.closeDB();
        connStatusText.setText(connection);
    }//GEN-LAST:event_disconnectActionPerformed

    /**
     * Action listener for execute sql button
     *
     * @param evt
     */
    private void sql_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sql_buttonActionPerformed

        if (util.getConn() == null) {
            sql_text.setText("You must connect to the database first!");
        } else {
            sql = sql_text.getText();

            if (sql.equals("")) {
                results_text.setText("You must enter a query!");
            } else {

                if (sql.charAt(0) == 's' || sql.charAt(0) == 'S') { //if select query
                    //try for select SQL statements
                    try {
                        Result meta_data = util.sqlQuery(sql);
                        sql_text.setText(meta_data.getSql());
                        try {
                            int cols = meta_data.getMetaData().getColumnCount();
                            header = new String[cols];
                            for (int i = 1; i <= cols; i++) {
                                header[i - 1] = meta_data.getMetaData().getColumnName(i);
                            }//for

                            //get rows
                            int rows = 0;
                            ResultSet getRows = meta_data.getResultSet();
                            while (getRows.next()) {
                                rows += 1;
                            }//while
                            table_data = new String[rows][cols];
                            Result r = util.sqlQuery(sql);
                            if (rows < 1) {
                                results_text.setText("Your query returned 0 results");
                            } else {
                                int i = 0;
                                while(r.getResultSet().next()) {
                                    for (int j = 0; j < cols; j++) {
                                        table_data[i][j] = r.getResultSet().getString(j + 1);
                                    }//for
                                    i++;
                                }//while

                                results_text.setText("Rows: " + rows);
                            }//else
                            view_table.setModel(new javax.swing.table.DefaultTableModel(table_data, header));

                        } catch (NullPointerException e) {
                        }//catch
                    } catch (SQLException e) {
                        System.out.println(e + "");
                    }//catch
                }//if
                else {
                    //All other queries
                    Result update = util.sqlUpdate(sql);
                    results_text.setText("Rows updated: " + update.getUpdates());
                    table_data = null;
                    header = null;
                    view_table.setModel(new javax.swing.table.DefaultTableModel(table_data, header));
                }//else
            }//else
        }//else
    }//GEN-LAST:event_sql_buttonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu about;
    private javax.swing.JLabel connStatusLabel;
    private javax.swing.JLabel connStatusText;
    private javax.swing.JButton connect;
    private javax.swing.JButton disconnect;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPasswordField passText;
    private javax.swing.JLabel pw_label;
    private javax.swing.JLabel results_label;
    private javax.swing.JLabel results_text;
    private javax.swing.JButton sql_button;
    private javax.swing.JLabel sql_label;
    private javax.swing.JTextArea sql_text;
    private javax.swing.JTextField urlText;
    private javax.swing.JLabel url_label;
    private javax.swing.JTextField userText;
    private javax.swing.JLabel user_label;
    private javax.swing.JTable view_table;
    // End of variables declaration//GEN-END:variables
}
